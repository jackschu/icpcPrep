notebook_version(2)

lines = `
two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen
`

lines = lines.split("\n").filter(x => x.length)

print(lines)

mapping = [
    ["one","1"],
    ["two","2"],
    ["three","3"],
    ["four","4"],
    ["five","5"],
    ["six","6"],
    ["seven","7"],
    ["eight","8"],
    ["nine","9"],
]


lines = lines.map((line) => {
    let out = ''
    let acc = ''
    for (let char of line) {
        if (char <= '9' && char >= '0') {
            out += char
            acc = ''
        } else {
            acc += char
            for (row of mapping)
                if (acc.endsWith(row[0])) {
                    out += row[1]
                    // acc = '' //commented to allow overlapping numeric strings
                    // break
                }
        }
    }
    return out
})


lines = lines.map((line) => {
    let first = null
    let second = null
    for(let char of line) {
        if (char <= '9' && char >= '0' ){
            if(first == null) first = char
            else second = char 
        }
    }
    return [first, second]
})


print(lines)

print(lines[0])



lines = lines.map(line => line.at(0) + (line.at(1) ?? line.at(0)))


lines = lines.map(line => Number(line))

if(lines.some(l => Number.isNaN(l)))
print("bad")

print(lines)


answer = lines.reduce((curr, acc) => curr +acc)

print(answer)