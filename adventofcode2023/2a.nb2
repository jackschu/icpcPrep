notebook_version(2)

lines = `
Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green
Game 2: 1 blue, 2 green; 3 green, 4 blue, 1 red; 1 green, 1 blue
Game 3: 8 green, 6 blue, 20 red; 5 blue, 4 red, 13 green; 5 green, 1 red
Game 4: 1 green, 3 red, 6 blue; 3 green, 6 red; 3 green, 15 blue, 14 red
Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green
`

lines = lines.split('\n').filter((x) => x.length)

lines = lines
    .map((l) => l.split(':'))
    .map((l) => {
        return {
            id: Number(l[0].match(/\d+/)[0]),
            data: l[1].split(';').map((d) =>
                d
                    .split(',')
                    .map(
                        (item) => item.match(/(?<ct>\d+) (?<color>\w+)/).groups
                    )
                    .map((item) => ({ ...item, ct: Number(item.ct) }))
            ),
        }
    })



// print(repr(lines, {multiline:true}))
print(lines)

limits = new Map()
limits.set("red",12)
limits.set("green", 13)
limits.set("blue", 14)

legal = lines.filter((l) =>
    l.data.every((d) =>
        d.every((item) => {
            return item.ct <= limits.get(item.color)
        })
    )
)



print(legal)


print(answer = legal.map(l => l.id).reduce((curr, acc)=> curr+acc))